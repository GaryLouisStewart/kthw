N = 2
require 'yaml'
servers = YAML.load_file('machines.yaml')
Vagrant.configure("2") do |config|
   servers.each do |servers|
        config.vm.provider "libvirt" do |libvirt|
            libvirt.driver = 'qemu'
            libvirt.host = 'localhost'
            libvirt.uri = 'qemu:///system'
            libvirt.nested = true
            libvirt.cpu_mode = "host-model"
            libvirt.management_network_name = 'vagrant-mgmt'
            libvirt.management_network_address = '192.168.77.1/24'
        end

        config.vm.define "k8s-master" do |master|
            config.vm.provider "master" do |libvirt|
                libvirt.memory = servers["ram"]
                libvirt.cpus = servers["cpu"]
            end
            master.vm.box = servers["box"]
            master.vm.network "private_network",
            ip: servers["k8s_master_ip"],
            :libvirt__network_name => "kube-net",
            :libvirt__domain_name => "cka.local"
            master.vm.hostname = "k8s-master"
            master.vm.provision "ansible" do |ansible|
                ansible.playbook = "../master-playbook.yml"
                ansible.extra_vars = {
                    node_ip: "10.0.10.41",
                }
            end
        end

        (1..N).each do |i|
            config.vm.define "k8s-node-#{i}" do |node|
                config.vm.provider "node" do |libvirt|
                    libvirt.memory = servers["ram"]
                    libvirt.cpus = servers["cpu"]
                end
                node.vm.box = servers["box"]
                node.vm.network "private_network",
                ip: servers["k8s_node_ip"],
                :libvirt__network_name => "kube-net",
                :libvirt__domain_name => "cka.local"
                node.vm.hostname = "node-#{i}"
                node.vm.provision "ansible" do |ansible|
                    ansible.playbook = "../node-playbook.yml"
                    ansible.extra_vars = {
                        node_ip: "10.0.10.#{i + 41}",
                    }
                end
            end
        end
    end
end